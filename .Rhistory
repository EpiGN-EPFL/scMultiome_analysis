.libPaths()
getwd()
1 + 1
BiocManager::install("ChIPseeker")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ChIPseeker")
library(ChIPseeker)
BiocManager::install("GO.db")
library(ChIPseeker)
library(upSetR)
install.packages("UpSetR")
library(TxDb.Hsapiens.UCSC.hg38.knownGene)
BiocManager::install("TxDb.Hsapiens.UCSC.hg38.knownGene")
1+1
x = 1
x <- 1
setwd("~/switchdrive/scMultiome_analysis")
library(Seurat)
install.packages('Seurat')
library(Seurat)
packageVersion("Seurat")
library(Signac)
install.packages("Signac")
library(Signac)
library(Matrix)
library(dplyr)
library(Seurat)
library(Signac)
library(Matrix)
library(dplyr)
packageVersion("Seurat")
sample_info <- read.csv("data/E-MTAB-12002/E-MTAB-12002.sdrf.txt")
sample_info <- read.csv("data/E-MTAB-12002/E-MTAB-12002.sdrf.txt", sep = '\t')
View(sample_info)
table(sample_info$Characteristics.genetic.modification.)
table(sample_info$Characteristics.genetic.modification., sample_info$Technology.Type)
table(sample_info$Characteristics.genetic.modification., sample_info$Assay.Name)
?table
table(sample_info$Characteristics.genetic.modification., sample_info$Assay.Name, useNA = "no")
sample_info <- read.csv("data/E-MTAB-12002/E-MTAB-12002.sdrf.txt", sep = '\t')
table(sample_info$Assay.Name, sample_info$Characteristics.genetic.modification., useNA = "no")
sample_info %>%
count(Assay.Name, Characteristics.genetic.modification.) %>%
tidyr::spread(Characteristics.genetic.modification., n, fill = 0)
sample_info %>%
count(Assay.Name, Characteristics.genetic.modification.) %>%
filter(n > 0) %>%  # Remove rows with zero counts
spread(Characteristics.genetic.modification., n, fill = 0)  # Convert to wide format
library(Seurat)
library(Signac)
library(Matrix)
library(dplyr)
library(tidyr)
library(Seurat)
library(Signac)
library(Matrix)
library(dplyr)
library(tidyr)
sample_info %>%
count(Assay.Name, Characteristics.genetic.modification.) %>%
filter(n > 0) %>%  # Remove rows with zero counts
spread(Characteristics.genetic.modification., n, fill = 0)  # Convert to wide format
library(dplyr)
library(tidyr)
# Extract ATAC/RNA from Assay.Name
sample_info <- sample_info %>%
mutate(
Modality = case_when(
grepl("ATAC", Assay.Name) ~ "ATAC",
grepl("RNA", Assay.Name) ~ "RNA",
TRUE ~ "Other"
)
)
# Check for ATAC-RNA pairs within each modification
paired_samples <- sample_info %>%
group_by(Characteristics.genetic.modification.) %>%
summarize(
ATAC = sum(Modality == "ATAC"),
RNA = sum(Modality == "RNA"),
Samples = paste(Assay.Name, collapse = ", ")
) %>%
filter(ATAC == 1 & RNA == 1)  # Keep only modifications with exactly one ATAC and one RNA
# Display the final table
paired_samples
library(dplyr)
library(tidyr)
# Extract ATAC/RNA from Assay.Name
sample_info <- sample_info %>%
mutate(
Modality = case_when(
grepl("ATAC", Assay.Name) ~ "ATAC",
grepl("RNA", Assay.Name) ~ "RNA",
TRUE ~ "Other"
)
)
# Check for ATAC-RNA pairs within each modification
paired_samples <- sample_info %>%
group_by(Characteristics.genetic.modification.) %>%
summarize(
ATAC = sum(Modality == "ATAC"),
RNA = sum(Modality == "RNA"),
Samples = paste(Assay.Name, collapse = ", ")
)
# Display the final table
paired_samples
sample_info <- read.csv("data/E-MTAB-12002/E-MTAB-12002.sdrf.txt", sep = '\t')
table(sample_info$Assay.Name, sample_info$Characteristics.genetic.modification., useNA = "no")
# Check for ATAC-RNA pairs within each modification
paired_samples <- sample_info %>%
group_by(Characteristics.genetic.modification.) %>%
summarize(
Samples = paste(Assay.Name, collapse = ", ")
)
# Display the final table
paired_samples
sample_info %>%
mutate(
Modality = case_when(
grepl("ATAC", Assay.Name) ~ "ATAC",
grepl("RNA", Assay.Name) ~ "RNA",
TRUE ~ "Other"
)
) %>%
group_by(Characteristics.genetic.modification.) %>%
summarize(
ATAC_samples = paste(Assay.Name[Modality == "ATAC"], collapse = ", "),
RNA_samples = paste(Assay.Name[Modality == "RNA"], collapse = ", ")
)
sample_info <- read.csv("data/E-MTAB-12002/E-MTAB-12002.sdrf.txt", sep = '\t')
head(sample_info)
sample_info %>%
mutate(
Modality = case_when(
grepl("ATAC", Assay.Name) ~ "ATAC",
grepl("RNA", Assay.Name) ~ "RNA",
TRUE ~ "Other"
)
) %>%
group_by(Characteristics.genetic.modification.) %>%
summarize(
ATAC_samples = paste(Assay.Name[Modality == "ATAC"], collapse = ", "),
RNA_samples = paste(Assay.Name[Modality == "RNA"], collapse = ", ")
)
sample_info <- read.csv("data/E-MTAB-12002/E-MTAB-12002.sdrf.txt", sep = '\t')
library(Seurat)
library(Signac)
library(Matrix)
library(dplyr)
library(tidyr)
library(knitr)
sample_info %>%
mutate(
Modality = case_when(
grepl("ATAC", Assay.Name) ~ "ATAC",
grepl("RNA", Assay.Name) ~ "RNA",
TRUE ~ "Other"
)
) %>%
group_by(Characteristics.genetic.modification.) %>%
summarize(
ATAC_samples = paste(Assay.Name[Modality == "ATAC"], collapse = ", "),
RNA_samples = paste(Assay.Name[Modality == "RNA"], collapse = ", ")
) %>%
kable()
sample_info %>%
mutate(
Modality = case_when(
grepl("ATAC", Assay.Name) ~ "ATAC",
grepl("RNA", Assay.Name) ~ "RNA",
TRUE ~ "Other"
)
) %>%
group_by(Characteristics.genetic.modification.) %>%
summarize(
ATAC_samples = paste(unique(Assay.Name[Modality == "ATAC"]), collapse = ", "),
RNA_samples = paste(unique(Assay.Name[Modality == "RNA"]), collapse = ", ")
) %>%
kable()
wt <- Read10X("/Volumes/upzenk/common/PUBLIC_DATA/publications/Pando_Fleck_Nature_2022/scMultiome/arc-runs_A4/count_A4/outs/filtered_feature_bc_matrix/")
wt
wt$`Gene Expression`
View(wt)
ncol(wt$`Gene Expression`)
print(c("Number of cells in RNA-seq data:",ncol(wt$`Gene Expression`)))
print(paste("Number of cells in RNA-seq data:",ncol(wt$`Gene Expression`)))
print(paste("Number of cells in RNA-seq data:",ncol(wt$`Gene Expression`)))
print(paste("Number of cells in ATAC-seq data:",ncol(wt$Peaks)))
colnames(wt$`Gene Expression`)
colnames(wt$`Gene Expression`) == colnames(wt$Peaks)
# check if they have matching barcodes
all(colnames(wt$`Gene Expression`) == colnames(wt$Peaks))
head(wt$`Gene Expression`)
colnames(wt$`Gene Expression`)
rownames(wt$`Gene Expression`)
rownames(wt$`Gene Expression`) %>% head()
rownames(wt$Peaks) %>% head()
seurat_wt <- CreateSeuratObject(counts = wt$`Gene Expression`,
assay = "RNA",
project = "wt")
seurat_wt
library(EnsDb.Hsapiens.v86)
BiocManager::install("EnsDb.Hsapiens.v86")
library(EnsDb.Hsapiens.v86) # Annnotation database
library(Seurat)
library(Signac)
library(Matrix)
library(dplyr)
library(tidyr)
library(knitr) # This is to make rendered Markdown files look pretty
library(EnsDb.Hsapiens.v86) # Annnotation database
library(EnsDb.Hsapiens.v86) # Annotation database
detach("package:Signac", unload = TRUE)
library(EnsDb.Hsapiens.v86) # Annotation database
library(Signac)
library(EnsDb.Hsapiens.v86) # Annotation database
